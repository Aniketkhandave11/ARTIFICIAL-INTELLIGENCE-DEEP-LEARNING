# -*- coding: utf-8 -*-
"""Copy of Assignment_1_DL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FZPFEWX8ixpj6zVOx7EcL42NVWwT5D-5
"""

#Installing Keras
!pip install tensorflow --upgrade

#Importing numpy, pandas
import numpy as np
import pandas as pd

#Reading Dataset
df = pd.read_csv('/content/winequality-red.csv');

df.head()

#Importing tensorflow
import tensorflow as tf

train_df=df.sample(frac=0.75, random_state=4)

val_df=df.drop(train_df.index)

#Giving ranges
max_val=train_df.max(axis=0)
min_val=train_df.min(axis=0)

range=max_val - min_val
train_df=(train_df - min_val)/(range)

val_df=(val_df- min_val)/range

#seperating targets and labels
X_train = train_df.drop('quality',axis=1)
X_val = val_df.drop('quality',axis=1)
y_train = train_df['quality']
y_val = val_df['quality']

input_shape = [X_train.shape[1]]

input_shape

#Creating neural network
model=tf.keras.Sequential([tf.keras.layers.Dense(units=1,input_shape=input_shape)])

model.summary()

model = tf.keras.Sequential([

	tf.keras.layers.Dense(units=64, activation='relu',
						input_shape=input_shape),
	tf.keras.layers.Dense(units=64, activation='relu'),
	tf.keras.layers.Dense(units=1)
])
model.summary()

#adam optimizer
model.compile(optimizer='adam',  loss='mae')

losses = model.fit(X_train, y_train,

				validation_data=(X_val, y_val),

				batch_size=256,
				epochs=25, # total epoch

				)

model.predict(X_val.iloc[0:3, :])

y_val.iloc[0:3]

loss_df = pd.DataFrame(losses.history)

loss_df.loc[:,['loss','val_loss']].plot()